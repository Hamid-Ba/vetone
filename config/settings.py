"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.18.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

from decouple import config, Csv
from dj_database_url import parse as db_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

SITE_ID = 1
SITE = {"front": {"protocol": "https", "url": "vetone.ir"}}


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config(
    "SECRET_KEY",
    default="django-insecure-1aexmk-ef)_)(^grkc$4_6azv^lbkv*jzvrd%9zk+rl=y0(er8",
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", default=False, cast=bool)

# ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS")
ALLOWED_HOSTS = ["*"]


# Application definition
VETONE_APPS = [
    "account.apps.AccountConfig",
    "blog",
    "common",
    "monitoring",
    "province",
    "veterinary.apps.VeterinaryConfig",
    "gallery",
    "wallet",
    "siteinfo",
    "zarinpal.apps.ZarinpalConfig",
]

THIRD_PARTY_APPS = [
    "corsheaders",
    "drf_spectacular",
    "rest_framework",
    "rest_framework.authtoken",
    "django_sonar",
    "django_celery_beat",
    "django_filters",
    "ckeditor",
    "django_jalali",
    "jalali_date",
]


INSTALLED_APPS = (
    [
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        "django.contrib.sites",
    ]
    + THIRD_PARTY_APPS
    + VETONE_APPS
)
CSRF_TRUSTED_ORIGINS = config(
    "CSRF_TRUSTED_ORIGINS", default=["http://*.127.0.0.1"], cast=Csv()
)

CORS_ALLOW_ALL_ORIGINS = True

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_sonar.middlewares.requests.RequestsMiddleware",
]


ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": config(
        "MAIN_DATABASE",
        default="sqlite:///" + str(BASE_DIR / "db.sqlite3"),
        cast=db_url,
    )
}


AUTH_USER_MODEL = "account.User"

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = config("TIME_ZONE", default="Asia/Tehran")

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.TokenAuthentication",
    ),
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
    ],
}

DJANGO_SONAR = {
    "excludes": [
        STATIC_URL,
        MEDIA_URL,
        "/sonar/",
        "/admin/",
        "/__reload__/",
    ],
}

CKEDITOR_CONFIGS = {
    "default": {
        "toolbar": "none",
        "height": 200,
        "width": 600,
    },
}

KAVENEGAR_API_KEY = config("KAVENEGAR_API_KEY")

MERCHANT_ID = config("MERCHANT_ID")

VERIFY_URL = "https://api.vetone.ir/zarinpal/verify_transaction/"
FRONT_VERIFY = "https://vetone.ir/payment/verify/"

ACADEMY_URL = "https://vetone.ir/academy"
PHONE_SUPPORT = "02191035274"


CELERY_BROKER_URL = config("CELERY_BROKER_URL")
REDIS_CACHE = config("REDIS_CACHE")
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_BACKEND = CELERY_BROKER_URL

IS_TEST = config("IS_TEST", default=False, cast=bool)

if IS_TEST:
    CELERY_TASK_ALWAYS_EAGER = True  # Executes tasks synchronously
    CELERY_TASK_EAGER_PROPAGATES = True  # Propagates exceptions


CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": REDIS_CACHE,
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    }
}
